{"version":3,"sources":["components/Nav/Nav.js","utils/API.js","components/SearchResults/DisplayResults.js","pages/Search/SearchBook.js","pages/Saved/Saved.js","App.js","registerServiceWorker.js","index.js"],"names":["Navigation","Navbar","collapseOnSelect","expand","bg","variant","Brand","href","className","Toggle","aria-controls","Collapse","id","Nav","Link","searchedTitle","axios","get","data","post","title","author","image","description","link","then","response","console","log","alert","catch","err","delete","DisplayResults","props","Container","Jumbotron","Button","onClick","newBook","API","src","alt","SearchBook","useState","queryState","setQueryState","searchReturn","setSearchReturn","fluid","Form","inline","FormControl","type","size","placeholder","onChange","event","target","value","items","error","map","book","volumeInfo","authors","imageLinks","thumbnail","infoLink","SavedBooks","savedBookState","setSavedBookState","useEffect","savedBooks","item","push","handleDeleteBook","preventDefault","filter","displaySavedBooks","App","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.1ad9175c.chunk.js","sourcesContent":["import React from \"react\";\nimport { Navbar, Nav } from \"react-bootstrap\";\n\nfunction Navigation() {\n  return (\n    <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n      <Navbar.Brand href=\"/\">\n        <h2 className=\"title\" >Google Books Search Tool</h2>\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\n        <Nav className=\"ml-auto\">\n          <Nav.Link href=\"/\">\n            <h4>Home</h4>\n          </Nav.Link>\n          <Nav.Link href=\"saved-books\">\n            <h4>Saved Books</h4>\n          </Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n\nexport default Navigation;\n","import axios from \"axios\";\n\nexport default {\n  searchBook: function (searchedTitle) {\n    return axios.get(\n      `https://www.googleapis.com/books/v1/volumes?q=${searchedTitle}`\n    );\n  },\n\n  saveBook: function (data) {\n    return axios\n      .post(\"/api/books\", {\n        id: data.id,\n        title: data.title,\n        author: data.author,\n        image: data.image,\n        description: data.description,\n        link: data.link,\n      })\n      .then(function (response) {\n        console.log(\"saved book\", response);\n        alert(\"Book saved\");\n      })\n      .catch(function (err) {\n        console.log(\"error in save book: \", err);\n      });\n  },\n\n  getSavedBooks: function () {\n    return axios.get(\"/api/books\");\n  },\n\n  deleteBook: function (id) {\n    return axios\n      .delete(`/api/books/${id}`)\n      .then(function (response) {\n        console.log(\"deleted this id: \", response);\n      })\n      .catch(function (err) {\n        console.log(\"error in delete book: \", err);\n      });\n  },\n};\n","import React from \"react\";\nimport API from \"../../utils/API\";\nimport { Jumbotron, Button, Container } from \"react-bootstrap\";\nimport \"./displayResults.css\";\n\nfunction DisplayResults(props) {\n  function handleSaveBook() {\n    const newBook = {\n      id: props.id,\n      title: props.title,\n      author: props.author,\n      image: props.image,\n      description: props.description,\n      link: props.link,\n    };\n    console.log(\"new book: \", newBook);\n    API.saveBook(newBook);\n  }\n  return (\n    <>\n      <Container className=\"pageContainer\">\n        <Jumbotron className=\"jumboContainer\">\n          <Button className=\"buttons\" id={props.id} onClick={handleSaveBook}>\n            Save Book\n          </Button>\n          <Button className=\"buttons\" href={props.link}>\n            View Book\n          </Button>\n          <h1>Title: {props.title}</h1>\n          <h2>Author(s): {props.author}</h2>\n          <hr />\n          <img className=\"imageShadow\" src={props.image} alt=\"book cover\"></img>\n          <hr />\n          <h2>Description</h2>\n          <hr />\n          <p className=\"bookDesc\">{props.description}</p>\n        </Jumbotron>\n      </Container>\n    </>\n  );\n}\n\nexport default DisplayResults;\n","import React, { useState } from \"react\";\nimport {\n  Container,\n  Row,\n  Navbar,\n  Jumbotron,\n  Form,\n  FormControl,\n  Button,\n} from \"react-bootstrap\";\n\nimport \"./searchBook.css\"\nimport API from \"../../utils/API\";\n\nimport DisplayResults from \"../../components/SearchResults/DisplayResults\";\n\n\nfunction SearchBook() {\n  const [queryState, setQueryState] = useState(\"\");\n  const [searchReturn, setSearchReturn] = useState([]);\n\n  function searchButtonClick() {\n    API.searchBook(queryState)\n      .then((response) => {\n        setSearchReturn(response.data.items);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n  return (\n    <>\n      <Container fluid className=\"pageContainer\">\n          <Jumbotron className=\"jumbotronContainer\">\n            <h1>Welcome!</h1>\n            <hr />\n            <h4>Use the search box to find information about specific books.</h4>\n            <h3>OR</h3>\n            <h4>Navigate to the Saved Books tab to view any saved books.</h4>\n            <Form inline className=\"formBox \">\n              <FormControl\n                type=\"text\"\n                size=\"lg\"\n                placeholder=\"Search Book\"\n                onChange={(event) => setQueryState(event.target.value)}\n              />\n              <Button className=\"searchButton\" onClick={searchButtonClick}>\n                Search\n              </Button>\n            </Form>\n          </Jumbotron>\n      </Container>\n\n      {searchReturn.map((book) => {\n        return (\n          <DisplayResults\n            id={book.id}\n            title={book.volumeInfo.title}\n            author={book.volumeInfo.authors}\n            image={\n              book.volumeInfo.imageLinks\n                ? book.volumeInfo.imageLinks.thumbnail\n                : console.log(\"no image to display\")\n            }\n            description={book.volumeInfo.description}\n            link={book.volumeInfo.infoLink}\n          />\n        );\n      })}\n    </>\n  );\n}\n\nexport default SearchBook;\n","import React, { useState, useEffect } from \"react\";\nimport { Container, Jumbotron, Button } from \"react-bootstrap\";\nimport API from \"../../utils/API\";\nimport \"./saved.css\";\n\nfunction SavedBooks() {\n  const [savedBookState, setSavedBookState] = useState([]);\n  useEffect(() => {\n    API.getSavedBooks().then((response) => {\n      let savedBooks = [];\n      response.data.map((item) => {\n        savedBooks.push({\n          id: item.id,\n          title: item.title,\n          author: item.author,\n          image: item.image,\n          description: item.description,\n          link: item.link,\n        });\n      });\n      setSavedBookState(savedBooks);\n    });\n  }, []);\n\n  const handleDeleteBook = (event) => {\n    event.preventDefault();\n    alert(\"Book has been deleted\");\n    API.deleteBook(event.target.id);\n    setSavedBookState(\n      savedBookState.filter((book) => {\n        return book.id !== event.target.id;\n      })\n    );\n  };\n\n  const displaySavedBooks = savedBookState.map((data) => (\n    <>\n      <Jumbotron className=\"savedContainer\">\n        <Button\n          className=\"buttons deleteButton\"\n          id={data.id}\n          onClick={handleDeleteBook}\n        >\n          Delete Book\n        </Button>\n        <Button href={data.link} className=\"buttons viewButton\">\n          View Book\n        </Button>\n\n        <h1>Title: {data.title}</h1>\n        <h2>Author(s): {data.author}</h2>\n        <hr />\n        <img className=\"imageShadow\" src={data.image} alt=\"book cover\"></img>\n        <hr />\n        <h2>Description</h2>\n        <hr />\n        <p className=\"bookDesc\">{data.description}</p>\n      </Jumbotron>\n    </>\n  ));\n\n  return (\n    <Container className=\"pageContainer\">\n    {displaySavedBooks}\n      </Container>\n  )\n \n}\n\nexport default SavedBooks;\n","import React from \"react\"\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Navigation from \"./components/Nav/Nav\"\nimport SearchBook from \"./pages/Search/SearchBook\"\nimport SavedBooks from \"./pages/Saved/Saved\"\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <>\n    <Router>\n      <Navigation />\n      <Switch>\n          <Route exact path=\"/\" component={SearchBook} />\n          <Route exact path=\"/saved-books\" component={SavedBooks} />\n        </Switch>\n    </Router>\n    </>\n  );\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}